version: '3.9'
services:

  # config-service
  config:
    container_name: config
    restart: always
    image: ms-configuration-service:${version_config:-latest}
    build:
      context: ms-configuration/
      dockerfile: dockerfile
    env_file:
      - ms-configuration/docker/.env
    ports:
      - 8089:8089
    networks:
      - keycloak_postgre

  # eureka
  eureka:
    depends_on:
      - config
    container_name: eureka
    image: ms-eureka-service:${version_eureka:-latest}
    restart: always
    build:
      context: ms-eureka/
      dockerfile: dockerfile
      args:
        - CONFIG_SERVICE_URI_ARG=${IP_DEV}
        - env_profile=${env_DEV}
    env_file:
      - .env
    ports:
      - 8099:8099
    environment:
      - SPRING_PROFILES_ACTIVE=${env_DEV}
      - CONFIG_SERVICE_URI=${IP_DEV}
    networks:
      - keycloak_postgre

  # gateway-service
  gateway:
    depends_on:
      - eureka
    container_name: gateway
    image: ms-gateway-service:${version_gateway:-latest}
    restart: always
    build:
      context: ms-gateway/
      dockerfile: dockerfile
      args:
        - CONFIG_SERVICE_URI_DEV=${IP_DEV}
        - env_profile=${env_DEV}
    env_file:
      - .env
    ports:
      - 8077:8077
    environment:
      - SPRING_PROFILES_ACTIVE=${env_DEV}
      - CONFIG_SERVICE_URI=${IP_DEV}
      - eureka.client.service-url.defaultZone=${eureka_Zone}
    networks:
      - keycloak_postgre

  # article
  article:
    depends_on:
      - eureka
    container_name: article
    restart: always
    image: ms-article-service:${version_article:-latest}
    env_file:
      - .env
    build:
      context: ms-article/
      dockerfile: dockerfile
      args:
        - CONFIG_SERVICE_URI_ARG=${IP_DEV}
        - env_profile=${env_DEV}
    deploy:
      replicas: 1
    ports:
      - "0:9010"
      # volumes:
      # Path absolut pour l'échange des fichiers
      #- ./$PWD TODO dossier local:/blog/images:rw
    environment:
      - SPRING_PROFILES_ACTIVE=${env_DEV}
      - CONFIG_SERVICE_URI=${IP_DEV}
      - eureka.client.service-url.defaultZone=${eureka_Zone}
    networks:
      - keycloak_postgre

networks:
  keycloak_postgre:
    name: sso_bd
    external: true  # indic qu'il est déjà present
    driver: bridge  # Réseau docker isolé